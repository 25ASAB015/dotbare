#!/bin/bash
#
# unstage the selected staged file
# or reset the commit to certain point
#
# @params
# Globals
#   ${mydir}: current directory of the script
#   ${selected_files}: selected file to unstage

set -e

mydir="${0%/*}"
source "${mydir}"/../helper/set_variable

function usage() {
  echo -e "Usage: dotbare freset [-h] [-f] [-d] ...\n"
  echo -e "Reset/Unstage the selected staged file"
  echo -e "Or reset the commit to certain point\n"
  echo -e "optional arguments:"
  echo -e "  -h\t\tshow this help message and exit"
}

while getopts ":h" opt
do
  case "$opt" in
    h)
      usage
      exit 0
      ;;
    *) 
      echo "Invalid option: ${OPTARG}" >&2
      usage
      exit 1
      ;;
  esac
done

selected_files=$(/usr/bin/git --git-dir="${DOTBARE_DIR}" --work-tree="${DOTBARE_TREE}" diff --name-status --cached | \
  awk '{print "\033[32m" $1 " " $2}' | fzf --header='select files to unstage' --multi --preview "echo {} | awk '{print \$2}' | \
      xargs -I __ /usr/bin/git --git-dir=${DOTBARE_DIR} --work-tree=${DOTBARE_TREE} diff --staged --color=always ${DOTBARE_TREE}/__" | \
    awk -v home="${DOTBARE_TREE}" '{print home "/" $2}')
[[ -z "${selected_files}" ]] && exit 0
while IFS= read -r line; do
  /usr/bin/git --git-dir="${DOTBARE_DIR}" --work-tree="${DOTBARE_TREE}" reset HEAD "${line}"
done <<< "${selected_files}"
